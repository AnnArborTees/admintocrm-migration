c
discounts.first
discounts.first.order
discounts.first.store
discounts.first.salesperson
discount.first.salesperson
pp discounts
discounts.count
totals.count
totals.uniq.count
mismatched_payments.count
finish_time
c
totals.uniq.last
totals.uniq.count
mismatched_payments.uniq.count
mismatched_payments.count
totals.count
pp discounts
discounts.count
c
pp mismatched_payments
pp mismatched_totals
pp totals
totals.uniq.count
totals.count
mismatched_payments.uniq.count
mismatched_payments.count
c
admin_order_totals.count
totals.count
mismatched_payments.uniq.count
mismatched_payments.count
c
totals.uniq.count
totals.count
admin_order_totals.uniq.count
admin_order_totals.count
finish_time
c
pp mismatched_payments
pp totals
mismatched_payments.uniq.count
mismatched_payments.count
totals.count
totals.uniq.count
total_money
finish_time
c
total_money
totals.last
totals.first
pp totals
totals.count
finish_time
c
total_money
c
pp totals
c
pp totals
pp payments_applied_totals
payments.count
pp mismatched_payments
pp totals
c
l: $823.83 ==> Payment: $823.83",
pp totals
c
pp totals
mismatched_payments.uniq.count
mismatched_payments.count
totals.uniq.count
totals.count
pp totals
c
pp totals
mismatched_payments.count
pp mismatched_payments
c
pp mismatched_payments
c
pp mismatched_payments
c
pp mismatched_payments
mismatched_payments.count
c
pp mismatched_payments
mismatched_payments.count
c
pp mismatched_payments
mismatched_payments.uniq.count
totals.count
mismatched_payments.count
c
pp totals
c
pp totals
c
pp totals
c
pp totals
c
pp totals
exit
self.taxable?
c
self.taxable? ? sprintf('%.2f', (subtotal * 0.06)).to_f : 0
self.taxable?
c
pp totals
c
pp totals
c
ao.is_tax_exempt
ao = Admin::Order.find_by(title: "Joe Asbury Benefit Fund Shirt")
order
order = Order::find_by(name: "Joe Asbury Benefit Fund Shirt")
order
Order::find_by(name: "Joe Asbury Benefit Fund Shirt")
pp totals
c
pp totals
c
pp totals
c
pp totals
c
pp totals
c
pp totals
exit
ao
c
tax + subtotal
tax = line.determine_tax(subtotal)
115 * 0.06
tax
subtotal
ao
c
ao
subtotal
c
23 + 1.38
23.0 * 0.06
subtotal
tax = line.determine_tax(subtotal)
exit
line.taxable?
subtotal
c
line.taxable?
tax = line.determine_tax(subtotal)
subtotal
exit
c
tax
subtotal
c
pp totals
exit
Order::get_ship_method_from_admin_order(ao)
ao
order.get_ship_method_from_admin_order(ao)
order
order.shipments.first
order.shipments
ao.shipments
ao.shipment
total
exit
total
c
total
c
total
c
total
c
pp totals.uniq
c
pp totals.uniq
c
pp totals.uniq
c
pp payments_applied_totals.uniq
c
Admin::Order.all.each do |ao|
ao = Admin::Order.(title.include? "Bar crawl")
ao = Admin::Order.find_by(title: "Buffalo Wild Wings bar crawl")
ao = Admin::Order.find_by(title: "Buffalo Wild Wings bar craql")
ao = Admin::Order.find_by(title: "Buffalo Wild Wings")
pp payments_applied_totals.uniq
payments_applied_totals.count
finish_time
exit
pp payments_applied_totals
pp payments_applies_totals
finish_time
exit
total
c
admin_item.is_taxable?
admin_item.order_id
admin_item
exit
c
ao.line_items.first.taxable
ao.line_items.count
tax
total
payment.amount.to_f
payment.amount
c
payment.amount.to_f - (tax + subtotal)
tax + subtotal
tax = subtotal * 0.06
total
subtotal + tax
tax
subtotal
payment.amount.to_f
total
c
total
payment.amount.to_f
ao.payments.count
c
ao.payments.count
payment.amount.to_f
total
exit
c
total
c
tax
subtotal
total
c
total
c
total
c
total
c
total
payment.amount.to_f
payment
ao.payments.count
salesperson.find(48)
ao.admin
ao
payment
exit
c
